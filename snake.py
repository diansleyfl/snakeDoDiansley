########################################################################
########################################################################
########################################################################
##########################                 #############################
##########################      SNAKE      #############################
##########################                 #############################
########################################################################
########################################################################
########################################################################

import pygame
import random

pygame.init()

########################################################################
######################      DEFINIÇÃO CORES      #######################
########################################################################

cor_fundo_tela = (0, 0, 0) #PRETO
cor_cobra = (0, 255, 0) #VERDE
cor_comida = (255, 20, 147) #ROSA
cor_pontuacao = (255, 255, 102) #AMARELO

########################################################################
###################      CONFIGURAÇÕES GERAIS      #####################
########################################################################

dimensoes = (600, 600)
velocidade_jogo = 6

########################################################################
####################      LOCAL INÍCIO COBRA      ######################
########################################################################

x = 300
y = 300
d = 20

########################################################################
#######################      CRIAÇÃO COBRA      ########################
########################################################################

lista_cobra = [[x, y]]

dx = 0
dy = 0

########################################################################
#######################      GERADOR COMIDA      #######################
########################################################################

x_comida = round(random.randrange(0, 600 - d) / 20) * 20
y_comida = round(random.randrange(0, 600 - d) / 20) * 20


########################################################################
#####################      CRIAÇÃO TELA JOGO      ######################
########################################################################

fonte = pygame.font.SysFont("Comic Sans MS", 35, bold=False, italic=False)

tela = pygame.display.set_mode((dimensoes))
pygame.display.set_caption('Snake do Diansley')

tela.fill(cor_fundo_tela)

clock = pygame.time.Clock()


########################################################################
########################################################################
##########################                  ############################
##########################      FUNÇÕES     ############################
##########################                  ############################
########################################################################
########################################################################

########################################################################
###################      FUNÇÃO DESENHAR COBRA      ####################
########################################################################

def desenha_cobra(lista_cobra):
    tela.fill(cor_fundo_tela)
    for unidade in lista_cobra:
        pygame.draw.rect(tela, cor_cobra, [unidade[0], unidade[1], d, d])
    
########################################################################
#####################      FUNÇÃO MOVER COBRA      #####################
########################################################################
    
def mover_cobra(dx, dy, lista_cobra):
    
    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            
            if event.key == pygame.K_LEFT:
                dx = -d
                dy = 0
            
            elif event.key == pygame.K_RIGHT:
                dx = d
                dy = 0
                
            elif event.key == pygame.K_UP:
                dx = 0
                dy = -d
                        
            elif event.key == pygame.K_DOWN:
                dx = 0
                dy = d
                
    x_novo = lista_cobra[-1][0] + dx
    y_novo = lista_cobra[-1][1] + dy
    
    lista_cobra.append([x_novo, y_novo])
    
    del lista_cobra[0]
  
    return dx, dy, lista_cobra

########################################################################
###################      FUNÇÃO VERIFICA COMIDA      ###################
########################################################################

def verifica_comida(dx, dy, x_comida, y_comida, lista_cobra):
    
    head = lista_cobra[-1]
    
    x_novo = head[0] + dx
    y_novo = head[1] + dy
        
    if head[0] == x_comida and head[1] == y_comida:
        lista_cobra.append([x_novo, y_novo])
        x_comida = round(random.randrange(0, 600 - d) / 20) * 20
        y_comida = round(random.randrange(0, 600 - d) / 20) * 20
            
    pygame.draw.rect(tela, cor_comida, [x_comida, y_comida, d, d])
        
    return x_comida, y_comida, lista_cobra

########################################################################
###################      FUNÇÃO VERIFICA PAREDE      ###################
########################################################################

def verifica_parede(lista_cobra):
    head = lista_cobra[-1]
    x = head[0]
    y = head[1]
    
    if x not in range(600) or y not in range(600):
        raise Exception

########################################################################
####################      FUNÇÃO MORDEU COBRA      #####################
########################################################################

def verifica_mordeu_cobra(lista_cobra):
    head = lista_cobra[-1]
    corpo = lista_cobra.copy()
    
    del corpo[-1]
    for x, y, in corpo:
        if x == head[0] and y == head[1]:
            raise Exception

########################################################################
##################      FUNÇÃO ATUALIZAR PONTOS      ###################
########################################################################

def atualizar_pontos(lista_cobra):
    pontos = str(len(lista_cobra))
    escore = fonte.render("Pontuação: " + pontos, True, cor_pontuacao)
    tela.blit(escore, [20, 20])
    
    
########################################################################
########################################################################
##########################      MANTEM       ###########################
##########################       JOGO        ###########################
##########################    FUNCIONANDO    ###########################
########################################################################
########################################################################

while True:
    
    pygame.display.update()
    
    desenha_cobra(lista_cobra)
    
    dx, dy, lista_cobra = mover_cobra(dx, dy, lista_cobra)
    
    x_comida, y_comida, lista_cobra = verifica_comida(
        dx, dy, x_comida, y_comida, lista_cobra)
    
    verifica_parede(lista_cobra)
    
    verifica_mordeu_cobra(lista_cobra)
    
    atualizar_pontos(lista_cobra)
    
    clock.tick(velocidade_jogo)
    
    
########################################################################
########################################################################
########################################################################
########################################################################